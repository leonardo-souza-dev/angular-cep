{"ast":null,"code":"import * as i0 from \"@angular/core\";\n//import { environment } from 'environments/environment';\nexport class ApiInterceptor {\n  constructor() {}\n  intercept(req, next) {\n    // Get the request url\n    let requestUrl = req.url;\n    console.log('requestUrl');\n    console.log(requestUrl);\n    // if the request URL have the string prefix, \n    // then make the replace by the correct url \n    if (requestUrl.indexOf('@api-x') !== -1) {\n      //requestUrl = requestUrl.replace('@api-x', environment.api);\n      debugger;\n      requestUrl = requestUrl.replace('@api-x', 'localhost:7202');\n      console.log('requestUrl');\n      console.log(requestUrl);\n    }\n    // clone the http request\n    req = req.clone({\n      url: requestUrl\n    });\n    // move to next HttpClient request life cycle\n    return next.handle(req);\n  }\n}\nApiInterceptor.ɵfac = function ApiInterceptor_Factory(t) {\n  return new (t || ApiInterceptor)();\n};\nApiInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiInterceptor,\n  factory: ApiInterceptor.ɵfac\n});","map":{"version":3,"mappings":";AAGA;AAGA,OAAM,MAAOA,cAAc;EAC1BC,eAAgB;EAChBC,SAAS,CACPC,GAAqB,EACrBC,IAAiB;IAEjB;IACA,IAAIC,UAAU,GAAGF,GAAG,CAACG,GAAG;IACxBC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzBD,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;IACvB;IACA;IACA,IAAIA,UAAU,CAACI,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;MACxC;MACA;MACAJ,UAAU,GAAGA,UAAU,CAACK,OAAO,CAAC,QAAQ,EAAE,gBAAgB,CAAC;MAE3DH,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzBD,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;;IAExB;IACAF,GAAG,GAAGA,GAAG,CAACQ,KAAK,CAAC;MACdL,GAAG,EAAED;KACN,CAAC;IACF;IACA,OAAOD,IAAI,CAACQ,MAAM,CAACT,GAAG,CAAC;EACzB;;AA1BYH,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAa,SAAdb,cAAc;AAAA","names":["ApiInterceptor","constructor","intercept","req","next","requestUrl","url","console","log","indexOf","replace","clone","handle","factory"],"sourceRoot":"","sources":["D:\\aulas\\angular_proj\\angular-x6reg7\\src\\app\\api-interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n//import { environment } from 'environments/environment';\r\n\r\n@Injectable()\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n constructor() { }\r\n intercept(\r\n   req: HttpRequest<any>,\r\n   next: HttpHandler\r\n ): Observable<HttpEvent<any>> {\r\n   // Get the request url\r\n   let requestUrl = req.url;\r\n   console.log('requestUrl')\r\n   console.log(requestUrl)\r\n   // if the request URL have the string prefix, \r\n   // then make the replace by the correct url \r\n   if (requestUrl.indexOf('@api-x') !== -1) {\r\n    //requestUrl = requestUrl.replace('@api-x', environment.api);\r\n    debugger\r\n    requestUrl = requestUrl.replace('@api-x', 'localhost:7202');\r\n\r\n    console.log('requestUrl')\r\n    console.log(requestUrl)\r\n   }\r\n   // clone the http request\r\n   req = req.clone({\r\n     url: requestUrl\r\n   });\r\n   // move to next HttpClient request life cycle\r\n   return next.handle(req);\r\n }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}